# `cooker init` fails on absent menu file.
expect_fail cooker init $S/non-existing-menu.json

# On failure, `cooker init` doesn't create `.cookerconfig` file.
filesExist . .cookerconfig 0

# `cooker init` fails on inherit from unknown parent.
expect_fail cooker init $S/unknown-parent-menu.json
filesExist . .cookerconfig 0

# `cooker init` fails on inheritance from ourself.
expect_fail cooker init $S/recursive-self-as-parent-menu.json
filesExist . .cookerconfig 0

# `cooker init` fails on inheritance loop.
expect_fail cooker init $S/recursive-menu.json
filesExist . .cookerconfig 0

# `cooker init` fails on mutual dependency inheritance.
expect_fail cooker init $S/mutual-dependency-menu.json
filesExist . .cookerconfig 0

# `cooker init` succeeds with multiple inheritance.
cooker init $S/multiple-same-menu.json
filesExist . .cookerconfig 1
rm .cookerconfig

# `cooker init` succeeds with multiple parents.
cooker init $S/multiple-parents-root-menu.json
filesExist . .cookerconfig 1
rm .cookerconfig

# `cooker init` succeeds with correct empty menu.
cooker init $S/menu.json

# On success `cooker init` creates a `.cookerconfig` file.
fileExists .cookerconfig

# The `.cookerconfig` file is correct.
linesInFile .cookerconfig 7
textInFile .cookerconfig '/menu.json",' 1
textInFile .cookerconfig '"layer-dir": "layers",' 1
textInFile .cookerconfig '"build-dir": "builds",' 1
textInFile .cookerconfig '"dl-dir": "downloads"' 1
textInFile .cookerconfig '"sstate-dir": "sstate-cache"' 1
textInFile .cookerconfig '"cooker-config-version": 1' 1

# `cooker init` fails if `.cookerconfig` file already exist.
expect_fail cooker init $S/menu.json

# `cooker init` succeeds with `force` option if `.cookerconfig` already exists.
cooker init -f $S/menu-copy.json

# With `force` option, the menu name is updated.
textInFile .cookerconfig '/menu-copy.json",' 1

# `cooker init` fails, even with `force` option if menu file is absent.
expect_fail cooker init -f $S/unknown-menu.json

# On failure `cooker init` doesn't overwite the `.cookerconfig` file.
textInFile .cookerconfig '/menu-copy.json",' 1

# With `-l` option `cooker init` overwrite the `layer-dir` parameter in `.cookerconfig`
cooker init -fl layers_dir -s sstate_dir $S/menu.json
linesInFile .cookerconfig 7
textInFile .cookerconfig '"layer-dir": "layers_dir",' 1
textInFile .cookerconfig '"build-dir": "builds",' 1
textInFile .cookerconfig '"dl-dir": "downloads"' 1
textInFile .cookerconfig '"sstate-dir": "sstate_dir"' 1
