# `chef init` fails on absent menu file.
expect_fail chef init $S/non-existing-menu.json

# On failure, `chef init` doesn't create `.chefconfig` file.
filesExist . .chefconfig 0

# `chef init` fails on inherit from unknown parent.
expect_fail chef init $S/unknown-parent-menu.json
filesExist . .chefconfig 0

# `chef init` fails on inheritance from ourself.
expect_fail chef init $S/recursive-self-as-parent-menu.json
filesExist . .chefconfig 0

# `chef init` fails on inheritance loop.
expect_fail chef init $S/recursive-menu.json
filesExist . .chefconfig 0

# `chef init` fails on mutual dependency inheritance.
expect_fail chef init $S/mutual-dependency-menu.json
filesExist . .chefconfig 0

# `chef init` succeeds with multiple inheritance.
chef init $S/multiple-same-menu.json
filesExist . .chefconfig 1
rm .chefconfig

# `chef init` succeeds with multiple parents.
chef init $S/multiple-parents-root-menu.json
filesExist . .chefconfig 1
rm .chefconfig

# `chef init` shall fail if duplicated build-targets are used
expect_fail chef init $S/duplicated-target-menu.json
filesExist . .chefconfig 0

# `chef init` succeeds with correct empty menu.
chef init $S/menu.json

# On success `chef init` creates a `.chefconfig` file.
fileExists .chefconfig

# The `.chefconfig` file is correct.
linesInFile .chefconfig 5
textInFile .chefconfig '/menu.json",' 1
textInFile .chefconfig '"layer-dir": "layers",' 1
textInFile .chefconfig '"build-dir": "builds",' 1
textInFile .chefconfig '"dl-dir": "downloads"' 1

# `chef init` fails if `.chefconfig` file already exist.
expect_fail chef init $S/menu.json

# `chef init` succeeds with `force` option if `.chefconfig` already exists.
chef init -f $S/menu-copy.json

# With `force` option, the menu name is updated.
textInFile .chefconfig '/menu-copy.json",' 1

# `chef init` fails, even with `force` option if menu file is absent.
expect_fail chef init -f $S/unknown-menu.json

# On failure `chef init` doesn't overwite the `.chefconfig` file.
textInFile .chefconfig '/menu-copy.json",' 1

# With `-l` option `chef init` overwrite the `layer-dir` parameter in `.chefconfig`
chef init -fl layers_dir $S/menu.json
linesInFile .chefconfig 5
textInFile .chefconfig '"layer-dir": "layers_dir",' 1
textInFile .chefconfig '"build-dir": "builds",' 1
textInFile .chefconfig '"dl-dir": "downloads"' 1

