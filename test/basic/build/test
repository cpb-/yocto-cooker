# `cooker build` fails when `cooker init` has not been called.'
rm -f .cookerconfig
expect_fail cooker build


# `cooker build` succeeds when `builds` is empty.
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "layers": [],
	    "builds": {}
	}
EOF
cooker init menu.json
cooker build

# `cooker build` fails without Poky `oe-init-build-env` script.
rm -f layers/poky/oe-init-build-env
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "layers": [],
	    "builds": {
	        "target-1": {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
expect_fail cooker build

cat > bitbake <<-EOF
	#! /bin/sh
	exit 0
EOF
chmod +x bitbake
PATH=.:$PATH

mkdir -p layers/poky
touch layers/poky/oe-init-build-env

# `cooker build` succeeds when no target is buildable.
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "layers": [],
	    "builds": {
	        "target-1" : {
	            "layers": [
	                "meta-doesnt-exist",
	                "meta-doesnt-exist-neither"
	            ],
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        },
	        "target-2" : {
	            "local.conf": [
	                "MACHINE = raspberrypi"
	            ]
	       }
	    }
	}
EOF
cooker init -f menu.json
cooker build


# `cooker init` fails when base-distro is unknown
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "base-distribution": "wingardium-leviosa",
	    "layers": [],
	    "builds": {
	        "build-1" : {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
expect_fail cooker init -f menu.json


# `cooker build` succeeds with Poky base-distro
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "base-distribution": "poky",
	    "layers": [],
	    "builds": {
	        "build-1" : {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
cooker build


# `cooker build` accepts 'Poky' (capitalized)
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "base-distribution": "Poky",
	    "layers": [],
	    "builds": {
	        "build-1" : {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
cooker build


# `cooker build` fails with Arago base-distro and no env-init script
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "base-distribution": "arago",
	    "layers": [],
	    "builds": {
	        "build-1" : {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
expect_fail cooker build



mkdir -p layers/openembedded-core
touch layers/openembedded-core/oe-init-build-env

# `cooker build` succeeds with Arago base-distro
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "base-distribution": "arago",
	    "layers": [],
	    "builds": {
	        "build-1" : {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
cooker build

# `cooker build` accepts 'Arago' (capitalized)
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "base-distribution": "Arago",
	    "layers": [],
	    "builds": {
	        "build-1" : {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
cooker build

rm -rf layers/openembedded-core

# `cooker build --keepgoing` calls `bitbake -k`
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "layers": [],
	    "builds": {
	        "target-1": {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
cat > bitbake <<-EOF
	#! /bin/sh
	echo "\$@" >> bitbake.log
	exit 0
EOF
rm -f bitbake.log
cooker build --keepgoing
textInFile bitbake.log "k core-image-base" 1

# `cooker build --download` calls `bitbake --runall=fetch`
cat > menu.json <<-EOF
	{
	    "sources": [],
	    "layers": [],
	    "builds": {
	        "target-1": {
	            "target": "core-image-base",
	            "local.conf": [
	                "MACHINE = qemu-x86"
	            ]
	        }
	    }
	}
EOF
cooker init -f menu.json
cat > bitbake <<-EOF
	#! /bin/sh
	echo "\$@" >> bitbake.log
	exit 0
EOF
rm -f bitbake.log
cooker build --download
textInFile bitbake.log "runall=fetch core-image-base" 1
