# fail if no init done
expect_fail cooker generate

# empty menu, nothing is generated
cooker init -f $S/empty-menu.json
cooker generate

filesExist . builds 0

# one target
cooker init -f $S/menu.json
cooker generate

# builds-dir exists
dirsExist . builds 1
# one build-dir for one target
dirsExist builds * 1
# first-target has been created
dirsExist builds build-first 1

# bblayers as expected
diff builds/build-first/conf/bblayers.conf $S/one-target-first-bblayers.conf

# local.conf as expected
textInFile builds/build-first/conf/local.conf 'COOKER_LAYER_DIR = "\${TOPDIR}/../../layers"' 1
textInFile builds/build-first/conf/local.conf 'DL_DIR = "\${TOPDIR}/../../downloads"' 1
textInFile builds/build-first/conf/local.conf 'SSTATE_DIR = "\${TOPDIR}/../../sstate-cache"' 1
textInFile builds/build-first/conf/local.conf 'COOKER_BUILD_NAME = "first"' 1

# Default value for CONF_VERSION is 1
textInFile builds/build-first/conf/local.conf 'CONF_VERSION \?= "1"' 1
# regenerate with CONF_VERSION = 2
mkdir -p layers/poky/meta-poky/conf
cat > layers/poky/meta-poky/conf/local.conf.sample <<- EOF
  CONF_VERSION = "2"
EOF
cooker generate
textInFile builds/build-first/conf/local.conf 'CONF_VERSION \?= "2"' 1

# Default action for ending bitbake is 'HALT'
mkdir -p layers/poky/bitbake/lib/bb/
> layers/poky/bitbake/lib/bb/__init__.py
cooker generate
textInFile builds/build-first/conf/local.conf 'HALT' 4
# With Bitbake version 1 the ending action was 'ABORT'
cat > layers/poky/bitbake/lib/bb/__init__.py <<- EOF2
__version__ = "1.52.0"
EOF2
cooker generate
textInFile builds/build-first/conf/local.conf 'ABORT' 4
# Since Bitbake version 2 it is 'HALT'.
cat > layers/poky/bitbake/lib/bb/__init__.py <<- EOF2
__version__ = "2.0.0"
EOF2
cooker generate
textInFile builds/build-first/conf/local.conf 'HALT' 4

# regenerate after layers-dir-change
cooker init -f -l layers_dir $S/menu.json
cooker generate

textInFile builds/build-first/conf/local.conf 'COOKER_LAYER_DIR = "\${TOPDIR}/../../layers"' 0
textInFile builds/build-first/conf/local.conf 'COOKER_LAYER_DIR = "\${TOPDIR}/../../layers_dir"' 1

# multiple targets
cooker init -f $S/multiple-targets.json
cooker generate

dirsExist . builds 1
dirsExist builds build-one-multiple 1
dirsExist builds build-two-multiple 1
dirsExist builds build-three-multiple 1

# inherited target
cooker init -f $S/build-template-menu.json
cooker generate

# builds-dir exists
dirsExist . builds 1
# first-inherited has been created
dirsExist builds build-first-inherited 1
# .template must not be generated
dirsExist builds build-.template 0

##################################
# Test versions < langdale (4.1) #
##################################
# Erase layers directory if exists
rm -rf layers
# Delete cooker configuration
rm -f .cookerconfig
# Simulate poky local.conf.sample file for versions < langdale
mkdir -p layers/poky/meta-poky/conf
touch layers/poky/meta-poky/conf/local.conf.sample

cooker init -f $S/menu.json
cooker generate

# Test that inside templateconf.cfg the path should be "meta-poky/conf"
# and not "None" when poky version is < langdale
textInFile builds/build-first/conf/templateconf.cfg 'None' 0
textInFile builds/build-first/conf/templateconf.cfg 'meta-poky/conf' 1

###################################
# Test versions >= langdale (4.1) #
###################################
# Erase layers directory if exists
rm -rf layers
# Delete cooker configuration
rm -f .cookerconfig
# Simulate poky local.conf.sample file for versions >= langdale
mkdir -p layers/poky/meta-poky/conf/templates/default
touch layers/poky/meta-poky/conf/templates/default/local.conf.sample

cooker init -f $S/menu.json
cooker generate

# Test that inside templateconf.cfg the path should be "meta-poky/conf/templates/default"
# and not "None" when poky version is >= langdale
textInFile builds/build-first/conf/templateconf.cfg 'None' 0
textInFile builds/build-first/conf/templateconf.cfg 'meta-poky/conf/templates/default' 1
